#include <iostream>		//директива include подключает библиотеку iostream
#include <ctime>		//Подключаем библиотеку с помощью которой можно вызывать функцию time
#include <string>		//Библиотека позволяющая работать с классом string (строки)

using namespace std;	//пространство имен, для сокращения кода


//Строки. Строковые массивы:

/*
 - Тип данных char может хранить только одно значение, (один символ);

	char symbol = 'q'

- Но, если объявить переменную как массив, char может принимать множество символов;
- строка является массивом из символов char;

	char string[] = "abcdef";	//Символ обозначается одинарными кавычками '', а строка двойными "" ;

- последний элемент строкового массива, должен хранить в себе значение \0 (Нулл терминатор), что означает конец строки;

	char string [] = {'H','E','L','L','O',\0};

- Функция strlen показывает сколько символов в строке;

	cout << strlen(string) << endl;		//Вывод количества символов в переменной string;
 ===========================================================================================
 Строки и указатели:

	const char* string = "Hello!";

 - Со строками можно обращаться так же как и с динамическим массивом, если объявить указатель, то можно не обозначать
 строку как массив;

 - Функция strlen(), передает количество символов в строке:
	
	cout << strlen(str) << endl;
=========================================================================================
Конкатенация (обьединение) строк:

- Тип данных string, позволяет создавать переменные со значением строки;
- Для того, чтобы использовать тип данных string, необходимо подключить библиотеку <string>;
- Обьединение 2-х строк происходит путем их суммирования:
	string str1 = "Hello ";
	string str2 = "World!";
	string result;

	result = str1+ " " + str2;	//мы можем даже добавить пробел в переменную с типом данных string;
	cout << result << endl;

*/

//Преобразование типов в стиле С:

/*
- Для преобразования типа данных переменной в другой тип данных, перед названием переменной в скобках пишем новый тип данных;

	double a = 33.3;
	cout << (int)a << endl;		//из double преобразовали в int;

	a = (char)a;	//Преобразовали переменную а из int в char;

*/






					//ФУНКЦИИ:



int main()
{

	setlocale(LC_ALL, "Rus");

	//Строки и указатели. ДЗ:

	/*

 					//ФУНКЦИИ:
int StrLength(const char* str)
{
	int counter = 0;
	//Пока значение строки с итераторатором counter не равен \0 (концу строки), прибавляем ему 1;
	while (str[counter]!='\0')
	{
		counter++;
	}

	return counter;
}


int main()
{
	//Написать свою реализацию функции strlen (Считает количество символов в строке);

	const char* str = "Hello!";

	cout << StrLength(str) << endl;
	*/

	//Конкатенация строк:
	
	string str1 = "Мартин";
	string str2 = "Игоревич";
	string str3 = "Дугин";
	string result;

	result = "Фамилия " + str3 + "\tИмя " + str1 + "\tОтчество " + str2;
	
	
	cout << result << endl;




	system("pause");	//Функция для того, чтобы консоль сразу не закрывалась вне Visual Studio
}
